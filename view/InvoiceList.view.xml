<mvc:View
	xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc"
	controllerName="sap.ui.demo.walkthrough.controller.InvoiceList"
>
	<!-- aggregation binding to root path "Invoices" of JSON data -->
	<!-- Since JSON model defined as "invoice" in manifest, each binding definition have to be prefixed with the idientifier "invoice>" -->
	<!-- spceify id for the List to identify the list from event handler "onFilterInvoices"  -->
	<!-- add sorter property to sort items and group them-->
	<List
		id="invoiceList"
		headerText="{i18n>invoiceListTitle}"
		class="sapUiResponsiveMargin"
		width="auto"
		items="{
      path : 'invoice>/Invoices',
      sorter : {
        path : 'ShipperName',
				group : true     
      }
    }"
	>
		<!-- Toolbar is more flexible and adjustable   -->
		<headerToolbar>
			<Toolbar>
				<Title text="{i18n>invoiceListTitle}"/>
				<ToolbarSpacer/>
				<SearchField
					width="50%"
					search=".onFilterInvoices"
				/>
			</Toolbar>
		</headerToolbar>
		<items>
			<ObjectListItem
				title="{invoice>Quantity} x {invoice>ProductName}"
				number="{
			parts: [{path: 'invoice>ExtendedPrice'}, {path: 'view>/currency'}],
			type: 'sap.ui.model.type.Currency',
			formatOptions: {
				showMeasure: false
			}
		}"
				numberUnit="{view>/currency}"
			/>
			<!-- add number & numberUnit attributs and apply the currency data type by setting the type attribute -->
			<!-- format number state with a expression binding syntax: starts with "=" inside the brackets and do simple calculation logic -->
			<ObjectListItem
				title="{invoice>Quantity} x {invoice>ProductName}"
				number="{
					parts: [{path: 'invoice>ExtendedPrice'}, {path: 'view>/currency'}],
					type: 'sap.ui.model.type.Currency',
					formatOptions: {
					showMeasure: false
					}
				}"
				numberUnit="{view>/currency}"
				numberState="{= ${invoice>ExtendedPrice} > 50 ? 'Error' : 'Success' }"
				type="Navigation"
				press="onPress"
			>
				<firstStatus>
					<ObjectStatus text="{
						path: 'invoice>Status',
						formatter: '.formatter.statusText'
					}"/>
				</firstStatus>
			</ObjectListItem>
		</items>
	</List>
</mvc:View>